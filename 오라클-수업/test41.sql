-- 정규화 연습
/*
	비정규화 테이블	
	주문 (주문 번호, 고객명, 주소, 상품id, 상품명, 단가, 수량)
	= 요구사항
		=> 주문 한 개에는 여러 상품을 포함할 수 있다
			1정규화 : 한 컬럼에 여러 개의 상품을 동시에 저장해야 한다
		=> 고객은 주문 시 고객명, 주소를 제공
		
		주문번호 => 고객명, 주소 제어
		상품id => 상품명, 단가 제어
		주문번호, 상품id => 수량 제어

		1정규화 원자값 문제 발생 가능성
		2정규화 부분 종속 문제 제거 => 고객명, 주소 문제 발생 => 주문번호 테이블 분리
		3정규화 문제 X

	= ERD
		주문 테이블 (주문번호, 고객명, 주소)
		상품 테이블 (상품id, 상품명, 단가)
		구매 테이블 (주문번호, 상품id, 수량)


	비정규화 테이블
	찜 (찜id, 회원id, 회원명, 전화번호, 상품id, 상품명, 가격, 찜한 날짜)
	= ERD
		상품 테이블 (상품id, 상품명, 가격)
		회원 테이블 (회원id, 회원명, 전화번호)
		찜 테이블 (상품id, 회원id, 찜id, 찜한 날짜)


	제약 조건
		기본키 : PRIMARY KEY => NOT NULL + UNIQUE
			=> 중복 없는 데이터 저장 (이상현상 방지)
			=> 권장 : 모든 테이블은 기본키가 존재해야 한다
			=> ID를 제외한 나머지는 숫자로 표현 => 자동증가번호(SEQUENCE)

		외래키 (참조키) : FOREIGN KEY
			=> 반드시 참조하고 있는 테이블의 PK가 존재해야 한다
			=> 참조한 컬럼의 값만 사용 가능
			=> 참조할 테이블 먼저 생성 / 참조 테이블 먼저 삭제
		
		CHECK : 지정된 값만 사용 (장르, 음식 종류, 부서명, 근무지...)

		UNIQUE : 후보키 (대체키) => 기본키를 모르는 경우
			=> 단점 : 중복 허용 X => NULL값 허용

		NOT NULL : 반드시 데이터값 존재
			=> 반드시 유효성 검사 (자바스크립트)

	키의 종류
		***기본키 : 고유 식별자 (ROW 한 개에 대한) => id, no...
			=> NULL값 허용 X, 중복 허용 X
			=> 모든 테이블에서 한 개 이상 사용을 권장
			=> FRIMARY KEY
		
		***후보키 : 기본키가 될 수 있는 컬럼 
			=> 아이디를 모르는 경우에 대신 사용 phone / email...
		
		대체키 : 후보키중에 기본키로 선택되지 않은 키

		복합키 : 두 개 이상의 컬럼을 조합해서 사용
			=> 학번, 과목 코드를 조합해서 제어하려는 목적
		
		***외래키 : 참조키 => 다른 테이블 연동
			=> FOREIGN KEY
	
		슈퍼키 : 후보키 + 다른 컬럼을 포함할 수 있는 키 (거의 사용 X)

		***유니크키 : 중복 허용 X, NULL값 허용
			=> 이메일 / 전화번호

		정리)
			=> 후보키는 UNIQUE 사용
			=> 기본키는 PRIMARY KEY 사용
			=> 외래키는 FOREIGN KEY 사용
*/